### YamlMime:FAQ
metadata:
  title: Frequently asked questions on burst capacity in Azure Cosmos DB
  description: Frequently asked questions about burst capacity in Azure Cosmos DB
  author: seesharprun
  ms.author: sidandrews
  ms.service: cosmos-db
  ms.custom: event-tier1-build-2022, ignite-2022, build-2023
  ms.topic: faq
  ms.reviewer: dech
  ms.date: 05/23/2023
title: Frequently asked questions on burst capacity in Azure Cosmos DB
summary: |
  [!INCLUDE[NoSQL, MongoDB, Cassandra, Gremlin, Table](includes/appliesto-nosql-mongodb-cassandra-gremlin-table.md)]
  
  Azure Cosmos DB burst capacity allows you to take advantage of your database or container's idle throughput capacity to handle spikes of traffic. This article answers commonly asked questions about Azure Cosmos DB burst capacity.

sections:
  - name: General
    questions:
      - question: |
          How much does it cost to use burst capacity?
        answer: |
          There's no charge to use burst capacity.         
      - question: |
          How does burst capacity work with autoscale?
        answer: |
          Autoscale and burst capacity are compatible. Autoscale gives you a guaranteed instant 10 times scale range. Burst capacity allows you to take advantage of unused, idle capacity to handle temporary spikes, potentially beyond your autoscale max RU/s. For example, suppose we have an autoscale container with one physical partition that scales between 100 - 1000 RU/s. Without burst capacity, any requests that consume beyond 1000 RU/s would be rate limited. With burst capacity however, the partition can accumulate a maximum of 1000 RU/s of idle capacity each second. Burst capacity allows the partition to burst at a maximum rate of 3000 RU/s for a limited amount of time.

          Accumulation of burst is based on the maximum autoscale RU/s.

          The autoscale maximum RU/s per physical partition must be less than 3000 RU/s for burst capacity to be applicable.

          When burst capacity is used with autoscale, autoscale will use up to the maximum RU/s before using burst capacity. You may see autoscale scale up to max RU/s during spikes of traffic.
      - question: |
          What resources can use burst capacity?
        answer: |
          When burst capacity is enabled on your account, any shared throughput databases or containers with dedicated throughput that have less than 3000 RU/s per physical partition can use burst capacity. The resource can use either manual or autoscale throughput.
      - question: |
          How can I monitor burst capacity?
        answer: |
          [Azure Monitor metrics](monitor.md#analyzing-metrics), built-in to Azure Cosmos DB, can filter by the dimension **CapacityType** on the **TotalRequests** and **TotalRequestUnits** metrics. Requests served with burst capacity will have **CapacityType** equal to **BurstCapacity**.
      - question: |
          How can I see which resources have less than 3000 RU/s per physical partition?
        answer: |
          You can use the new Azure Monitor metric **PhysicalPartitionThroughput** and split by the dimension **PhysicalPartitionId** to see how many RU/s you have per physical partition.
      - question: |
          How can I enable burst capacity on an account programatically?
        answer: |
          You can use the [Azure Cosmos DB Resource Provider REST API version 2022-11-15-preview](/rest/api/cosmos-db-resource-provider/) or a [Resource Manager template](manage-with-templates.md) with API version 2022-11-15-preview to set the property **enableBurstCapacity** to true.
          You can also use the Azure CLI or PowerShell.

          #### [PowerShell](#tab/azure-powershell)

          ```azurepowershell
          // Add the preview extension 2.0.5-preview or higher
          $installParameters = @{
              Name = "Az.CosmosDB"
              AllowPrerelease = $true
              Force = $true
          }
          Install-Module @installParameters

          // Enable burst capacity on an account
          $parameters = @{
          ResourceGroupName = "<resource-group-name>"
          Name = "<cosmos-account-name>"
          EnableBurstCapacity = $true
          }
          Update-AzCosmosDBAccount @parameters
          ```
          
          #### [Azure CLI](#tab/azure-cli)

          ```azurecli
          // Add the preview extension version 0.24.0 or higher
          az extension add --name cosmosdb-preview --version 0.24.0

          // Enable burst capacity on an account
          az cosmosdb update  \
          --resource-group '<resource-group-name>' \
          --name '<cosmos-account-name>' \
          --enable-burst-capacity true
          ```
additionalContent: |

  ## Next steps

  * Learn more about [burst capacity](burst-capacity.md)
